# Fast pytest configuration (no coverage, optimized for speed)
[pytest]
minversion = 7.0

# Optimized command line options for speed
addopts =
    # Minimal verbosity
    -q
    # Show only summary
    --tb=short
    # Use pytest-xdist for parallel execution
    -n auto
    # Fail fast - stop after first failure
    --maxfail=5
    # No coverage (significant speedup)
    --no-cov
    # Capture output only on failure (faster)
    --capture=fd
    # Disable plugins that slow down execution
    -p no:doctest
    -p no:flake8
    -p no:mypy
    # Show slowest tests
    --durations=10

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Python path configuration
pythonpath = src

# Test markers for selective running
markers =
    # Test categories
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external services)
    e2e: End-to-end tests (full system tests)
    slow: Slow running tests (deselect with '-m "not slow"')

    # Component markers
    parser: Tests for fountain parser components
    database: Tests for database/graph operations
    llm: Tests for LLM integration
    api: Tests for API endpoints
    cli: Tests for CLI commands
    mcp: Tests for MCP server

    # Feature markers
    search: Tests for search functionality
    scene: Tests for scene management
    graphrag: Tests for GraphRAG implementation

    # Special markers
    requires_llm: Tests that require LLM to be running
    requires_db: Tests that require database

    # Performance markers
    benchmark: Performance/benchmark tests
    stress: Stress tests

# Asyncio configuration
[pytest.asyncio]
asyncio_mode = auto

# Timeout configuration (reduced for faster failure)
[pytest.timeout]
timeout = 30
timeout_method = thread
timeout_func_only = True

# Environment variables for tests (optimized)
[pytest.env]
TESTING = 1
LOG_LEVEL = WARNING
DATABASE_URL = sqlite:///:memory:
DISABLE_CACHE = 0
PYTEST_XDIST_WORKER_COUNT = auto

# Warnings configuration (ignore to reduce noise)
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore::UserWarning
