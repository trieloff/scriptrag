# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_language_version:
  python: python3

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-json
      - id: pretty-format-json
        args: ['--autofix', '--indent=2']
        exclude: '\.ipynb$'
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: debug-statements
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first

  # Custom hook to check Python file sizes
  - repo: local
    hooks:
      - id: check-python-file-size
        name: Check Python file size limits
        entry: python3 scripts/check_file_size.py
        language: system
        types: [python]
        pass_filenames: true
        description: |
          Enforces file size limits to ensure MCP tool compatibility:
          - Regular files: 1000 lines (warning), 1500 lines (error)
          - Test files: 2000 lines (error)

  # Python linting and import sorting with Ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.5
    hooks:
      # Run the linter
      - id: ruff
        args: [ --fix ]
      # Run the formatter
      - id: ruff-format

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-pyyaml
          - types-requests
          - types-setuptools
          - pydantic
        args: [--ignore-missing-imports, --check-untyped-defs]
        exclude: '^(tests/|docs/|scripts/)'

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: '1.8.6'
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml', '-ll']
        additional_dependencies: ['bandit[toml]']
        exclude: '^tests/'

  # Docstring coverage - using docstr-coverage (Python 3.12+ compatible)
  - repo: https://github.com/HunterMcGushion/docstr_coverage
    rev: v2.3.2
    hooks:
      - id: docstr-coverage
        args: [
          'src/',
          '--fail-under', '60',
          '--skip-magic', '--skip-init', '--skip-class-def',
          '--skip-private', '--skip-property',
          '--exclude', 'tests/*', '--exclude', 'docs/*',
          '--exclude', 'scripts/*', '--exclude', '.venv/*',
          '--verbose', '2'
        ]

  # Check for common security issues - now enabled
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          ^(poetry\.lock|package-lock\.json|yarn\.lock|
          pnpm-lock\.yaml|\.secrets\.baseline|.*\.fountain)$

  # Markdown linting - now enabled
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ['--fix', '--config', '.markdownlint.yaml']
        exclude: '^(\.github/.*\.md|.*CLAUDE\.md|\.claude/.*)$'

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: ['-c', '.yamllint.yaml']

  # Python dependency safety check using pip-audit instead of safety
  - repo: https://github.com/pypa/pip-audit
    rev: v2.9.0
    hooks:
      - id: pip-audit
        args: ['--desc', 'on', '--fix']

  # Check for print statements
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-log-warn
      - id: python-no-eval
      - id: python-use-type-annotations

  # Validate pyproject.toml
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.24.1
    hooks:
      - id: validate-pyproject

  # Check Python package metadata
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.33.2
    hooks:
      - id: check-github-workflows
      - id: check-github-actions
      - id: check-readthedocs

  # Custom hooks
  - repo: local
    hooks:
      - id: check-magicmock-files
        name: Check for MagicMock test artifacts
        entry: |
          bash -c 'if git diff --cached --name-status | grep "^A" | cut -f2- | grep -E "(MagicMock|Mock.*id=)" > /dev/null; then
            echo "Error: MagicMock test artifacts detected. These should not be committed.";
            exit 1;
          fi'
        language: system
        pass_filenames: false

ci:
  autoupdate_schedule: weekly
  skip: [mypy]  # mypy is too slow for CI
  submodules: false
