# ScriptRAG Environment Variables Configuration
# Copy this file to .env and customize the values for your environment
#
# IMPORTANT: Variable names must match the pydantic field names in ScriptRAGSettings
# with the SCRIPTRAG_ prefix. For example:
# - Field: database_path → Environment: SCRIPTRAG_DATABASE_PATH
# - Field: llm_model → Environment: SCRIPTRAG_LLM_MODEL

# =============================================================================
# DATABASE SETTINGS
# =============================================================================

# Path to SQLite database file
SCRIPTRAG_DATABASE_PATH=./scriptrag.db

# SQLite connection timeout in seconds (default: 30.0, minimum: 0.1)
SCRIPTRAG_DATABASE_TIMEOUT=30.0

# Enable foreign key constraints (true/false)
SCRIPTRAG_DATABASE_FOREIGN_KEYS=true

# SQLite journal mode (DELETE, TRUNCATE, PERSIST, MEMORY, WAL, OFF)
SCRIPTRAG_DATABASE_JOURNAL_MODE=WAL

# SQLite synchronous mode (OFF, NORMAL, FULL, EXTRA)
SCRIPTRAG_DATABASE_SYNCHRONOUS=NORMAL

# SQLite cache size (negative = KB, positive = pages)
SCRIPTRAG_DATABASE_CACHE_SIZE=-2000

# SQLite temp store location (DEFAULT, FILE, MEMORY)
SCRIPTRAG_DATABASE_TEMP_STORE=MEMORY

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application name
SCRIPTRAG_APP_NAME=scriptrag

# Number of bytes to read from end of file when scanning for metadata (0 = read entire file)
SCRIPTRAG_METADATA_SCAN_SIZE=10240

# Skip boneyard metadata filtering during indexing (useful for testing)
SCRIPTRAG_SKIP_BONEYARD_FILTER=false

# Enable debug mode (true/false)
SCRIPTRAG_DEBUG=false

# =============================================================================
# LOGGING SETTINGS
# =============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
SCRIPTRAG_LOG_LEVEL=INFO

# Log output format (console, json, structured)
# - console: Human-readable output with colors (best for development, default)
# - json: Machine-readable JSON format (best for log aggregation systems)
# - structured: Key-value pairs (good for production debugging)
SCRIPTRAG_LOG_FORMAT=console

# Optional log file path (leave commented for console only)
# SCRIPTRAG_LOG_FILE=./logs/scriptrag.log

# Log file rotation interval
SCRIPTRAG_LOG_FILE_ROTATION=1 day

# Log file retention period
SCRIPTRAG_LOG_FILE_RETENTION=7 days

# =============================================================================
# SEARCH SETTINGS
# =============================================================================

# Word count threshold for automatic vector search
SCRIPTRAG_SEARCH_VECTOR_THRESHOLD=10

# Minimum similarity score for vector search results (0.0-1.0)
SCRIPTRAG_SEARCH_VECTOR_SIMILARITY_THRESHOLD=0.3

# Factor of query limit to use for vector results (0.1-1.0)
SCRIPTRAG_SEARCH_VECTOR_RESULT_LIMIT_FACTOR=0.5

# Minimum number of vector results to fetch
SCRIPTRAG_SEARCH_VECTOR_MIN_RESULTS=5

# Timeout in seconds for search thread execution
SCRIPTRAG_SEARCH_THREAD_TIMEOUT=300.0

# =============================================================================
# LLM SETTINGS
# =============================================================================

# Preferred LLM provider: claude_code, github_models, openai
# Leave unset for automatic provider detection
# SCRIPTRAG_LLM_PROVIDER=

# OpenAI-compatible API endpoint URL
# SCRIPTRAG_LLM_ENDPOINT=http://localhost:1234/v1

# API key for OpenAI-compatible endpoint
# SCRIPTRAG_LLM_API_KEY=your_api_key_here

# Default model to use for completions
# Use 'default', 'auto', 'none', or empty string for automatic selection
# SCRIPTRAG_LLM_MODEL=

# Default model to use for embeddings
# Use 'default', 'auto', 'none', or empty string for automatic selection
# SCRIPTRAG_LLM_EMBEDDING_MODEL=

# Dimensions for embedding vectors (e.g., 1536)
# SCRIPTRAG_LLM_EMBEDDING_DIMENSIONS=1536

# Default temperature for completions (0.0-2.0)
SCRIPTRAG_LLM_TEMPERATURE=0.7

# Default max tokens for completions
# SCRIPTRAG_LLM_MAX_TOKENS=2048

# Force use of static model lists instead of dynamic discovery
SCRIPTRAG_LLM_FORCE_STATIC_MODELS=false

# TTL in seconds for cached model lists (0 to disable caching)
SCRIPTRAG_LLM_MODEL_CACHE_TTL=3600

# =============================================================================
# BIBLE-SPECIFIC SETTINGS
# =============================================================================

# Path for storing bible chunk embeddings in Git LFS
SCRIPTRAG_BIBLE_EMBEDDINGS_PATH=embeddings/bible

# Maximum size for bible files in bytes (default: 10MB)
SCRIPTRAG_BIBLE_MAX_FILE_SIZE=10485760

# Maximum character limit for LLM context when extracting bible aliases
SCRIPTRAG_BIBLE_LLM_CONTEXT_LIMIT=2000

# =============================================================================
# MIGRATION NOTES FROM PREVIOUS VERSION
# =============================================================================
#
# The following environment variables have been renamed:
# - SCRIPTRAG_DB_PATH → SCRIPTRAG_DATABASE_PATH
# - SCRIPTRAG_DB_SYNCHRONOUS_MODE → SCRIPTRAG_DATABASE_SYNCHRONOUS
# - SCRIPTRAG_DB_JOURNAL_MODE → SCRIPTRAG_DATABASE_JOURNAL_MODE
# - SCRIPTRAG_DB_CACHE_SIZE → SCRIPTRAG_DATABASE_CACHE_SIZE
# - SCRIPTRAG_DB_POOL_SIZE → No longer supported (SQLite doesn't use connection pools)
# - SCRIPTRAG_DB_POOL_TIMEOUT → Use SCRIPTRAG_DATABASE_TIMEOUT instead
# - SCRIPTRAG_LLM_DEFAULT_MODEL → SCRIPTRAG_LLM_MODEL
#
# The following environment variables are no longer supported:
# - SCRIPTRAG_ENVIRONMENT (use SCRIPTRAG_DEBUG for development mode)
# - SCRIPTRAG_DATABASE_WAL_MODE (use SCRIPTRAG_DATABASE_JOURNAL_MODE=WAL instead)
# - SCRIPTRAG_DB_POOL_SIZE (SQLite doesn't use connection pools)
# - SCRIPTRAG_LLM_TIMEOUT (handled internally by providers)
# - SCRIPTRAG_LLM_MAX_RETRIES (handled internally by providers)
# - SCRIPTRAG_LLM_RETRY_DELAY (handled internally by providers)
# - SCRIPTRAG_LLM_BATCH_SIZE (use provider-specific settings)
# - SCRIPTRAG_TOP_P (not implemented in current LLM providers)
# - SCRIPTRAG_LOG_MAX_FILE_SIZE (use log rotation instead)
# - SCRIPTRAG_LOG_BACKUP_COUNT (use log retention instead)
# - SCRIPTRAG_LOG_JSON_LOGS (use SCRIPTRAG_LOG_FORMAT=json instead)
# - SCRIPTRAG_LOG_SQLALCHEMY_LEVEL (controlled by main log level)
# - SCRIPTRAG_LOG_HTTPX_LEVEL (controlled by main log level)
# - All SCRIPTRAG_MCP_* variables (MCP settings not yet implemented)
# - All SCRIPTRAG_PERF_* variables (performance settings not yet implemented)
# - All SCRIPTRAG_PATH_* variables (paths are configured individually)
#
# New environment variables added:
# - SCRIPTRAG_LLM_MODEL_CACHE_TTL (cache TTL for model lists)
# - SCRIPTRAG_LLM_FORCE_STATIC_MODELS (force static model lists)
# - SCRIPTRAG_DATABASE_FOREIGN_KEYS (enable foreign key constraints)
# - SCRIPTRAG_DATABASE_TEMP_STORE (SQLite temp store location)
# - SCRIPTRAG_METADATA_SCAN_SIZE (metadata scanning buffer size)
# - SCRIPTRAG_SKIP_BONEYARD_FILTER (skip boneyard filtering)
# - SCRIPTRAG_SEARCH_* variables (search configuration)
# - SCRIPTRAG_BIBLE_* variables (bible-specific settings)

# =============================================================================
# SECURITY NOTES
# =============================================================================
#
# - Never commit the actual .env file to version control
# - Keep API keys and sensitive information secure
# - Use different configurations for different environments
# - Consider using a secrets manager for production deployments

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# Development environment with verbose logging:
# SCRIPTRAG_DEBUG=true
# SCRIPTRAG_LOG_LEVEL=DEBUG
# SCRIPTRAG_LOG_FORMAT=console

# Production environment with JSON logging and file output:
# SCRIPTRAG_DEBUG=false
# SCRIPTRAG_LOG_LEVEL=INFO
# SCRIPTRAG_LOG_FORMAT=json
# SCRIPTRAG_LOG_FILE=./logs/scriptrag.log

# Custom LLM endpoint (e.g., OpenAI):
# SCRIPTRAG_LLM_PROVIDER=openai
# SCRIPTRAG_LLM_ENDPOINT=https://api.openai.com/v1
# SCRIPTRAG_LLM_API_KEY=sk-your-openai-api-key
# SCRIPTRAG_LLM_MODEL=gpt-4

# Local LLM with LMStudio:
# SCRIPTRAG_LLM_ENDPOINT=http://localhost:1234/v1
# SCRIPTRAG_LLM_MODEL=local-model-name

# Using Claude Code provider:
# SCRIPTRAG_LLM_PROVIDER=claude_code
# (No API key needed - uses Claude Code's built-in capabilities)

# Using GitHub Models:
# SCRIPTRAG_LLM_PROVIDER=github_models
# SCRIPTRAG_LLM_API_KEY=ghp_your_github_token
